@using Microsoft.AspNetCore.Identity
@using IdentityProject.Areas.Identity.Data
@using IdentityProject.Pages

@inject SignInManager<IdentityProjectUser> SignInManager
@inject UserManager<IdentityProjectUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" 
              >
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-page="/CameraPage">Camera</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-page="/GalleryPage" 
           >Gallery</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-page="/MapsPage" 
           >Maps</a>
    </li>
        <script>
            function logAction(userName, action) {
                fetch('/User/LogAction', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify({ userName: userName, action: action })
                });
            }
        </script>
    @if(true){
        //System.Diagnostics.Debug.WriteLine(UserHelper.GetUserImageFolderPath(User.Identity.Name, "Logged In"));
        string user = User.Identity.Name.ToString();
        var roles = new[] { "Super Admin", "Admin", "Operater", "Super User", "User", "Guest" };
        int rolelevel = -1;

        for (int i = roles.Length - 1; i >= 0 ; i--)
        {
            if (User.IsInRole(roles[i]))
            {
                rolelevel = i;
            }
            }
        @if (rolelevel == 0)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/UserList">Admin</a>
            </li>
        }
    }
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register" 
           onclick="UserHelper.GetUserImageFolderPath('Guest', 'Register Page');">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login" 
           onclick="UserHelper.GetUserImageFolderPath('Guest', 'Login Page');">Login</a>
    </li>
}
</ul>
